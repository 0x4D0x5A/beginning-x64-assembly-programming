     1                                  ; jumploop.asm
     2                                  BITS 64;
     3                                  extern printf
     4                                  section .data
     5 00000000 00CA9A3B00000000            number  dq      1000000000
     6 00000008 5468652073756D2066-         fmt     db      "The sum from 0 to %ld is %ld",10,0
     6 00000011 726F6D203020746F20-
     6 0000001A 256C6420697320256C-
     6 00000023 640A00             
     7                                  
     8                                  section .bss
     9                                  section .text
    10                                      global main
    11                                  main:
    12 00000000 55                          push    rbp
    13 00000001 4889E5                      mov     rbp, rsp
    14 00000004 BB00000000                  mov     rbx,0       ; counter
    15 00000009 B800000000                  mov     rax,0       ; sum will be in rax
    16                                  jloop:
    17 0000000E 4801D8                      add     rax, rbx
    18 00000011 48FFC3                      inc     rbx
    19 00000014 483B1C25[00000000]          cmp     rbx, [number]   ; number already reached?
    20 0000001C 7EF0                        jle     jloop           ; number not reached yet, loop
    21                                                              ; number not reached continue here
    22 0000001E 48BF-                       mov     rdi,fmt         ; prepare for displaying
    22 00000020 [0800000000000000] 
    23 00000028 488B3425[00000000]          mov     rsi, [number]
    24 00000030 4889C2                      mov     rdx,rax
    25 00000033 B800000000                  mov     rax,0
    26 00000038 E8(00000000)                call    printf
    27 0000003D 4889EC                      mov     rsp,rbp
    28 00000040 5D                          pop     rbp
    29 00000041 C3                          ret

     1                                  ; cpu.asm
     2                                  BITS 64:
     3                                  extern printf
     4                                  section .data							
     5 00000000 546869732063707520-             fmt_no_sse	db "This cpu does not support SSE",10,0
     5 00000009 646F6573206E6F7420-
     5 00000012 737570706F72742053-
     5 0000001B 53450A00           
     6 0000001F 546869732063707520-             fmt_sse42	db "This cpu supports SSE 4.2",10,0
     6 00000028 737570706F72747320-
     6 00000031 53534520342E320A00 
     7 0000003A 546869732063707520-             fmt_sse41	db "This cpu supports SSE 4.1",10,0
     7 00000043 737570706F72747320-
     7 0000004C 53534520342E310A00 
     8 00000055 546869732063707520-             fmt_ssse3	db "This cpu supports SSSE 3",10,0
     8 0000005E 737570706F72747320-
     8 00000067 5353534520330A00   
     9 0000006F 546869732063707520-             fmt_sse3	db "This cpu supports SSE 3",10,0
     9 00000078 737570706F72747320-
     9 00000081 53534520330A00     
    10 00000088 546869732063707520-             fmt_sse2	db "This cpu supports SSE 2",10,0
    10 00000091 737570706F72747320-
    10 0000009A 53534520320A00     
    11 000000A1 546869732063707520-             fmt_sse	db "This cpu supports SSE",10,0          
    11 000000AA 737570706F72747320-
    11 000000B3 5353450A00         
    12                                  section .bss
    13                                  section .text							
    14                                  	global main					
    15                                  main:
    16 00000000 55                          push rbp
    17 00000001 4889E5                      mov	rbp,rsp
    18 00000004 E802000000                  call cpu_sse    ;returns 1 in rax if sse support, otherwise 0  
    19 00000009 C9                          leave
    20 0000000A C3                          ret
    21                                  
    22                                  cpu_sse:
    23 0000000B 55                      	push rbp
    24 0000000C 4889E5                  	mov rbp,rsp
    25 0000000F 4D31E4                      xor r12,r12  	;flag SSE available
    26 00000012 B801000000                  mov eax,1     	;request CPU feature flags
    27 00000017 0FA2                        cpuid 
    28                                  
    29                                  ;test for SSE
    30 00000019 F7C200000002                test edx,2000000h	;test bit 25 (SSE)
    31 0000001F 741C                        jz sse2     		;SSE available                  
    32 00000021 41BC01000000                mov r12,1
    33 00000027 4831C0                      xor rax,rax
    34 0000002A 48BF-                       mov rdi,fmt_sse
    34 0000002C [A100000000000000] 
    35 00000034 51                          push rcx            ;modified by printf
    36 00000035 52                          push rdx			;preserve result of cpuid
    37 00000036 E8(00000000)                call printf
    38 0000003B 5A                          pop rdx
    39 0000003C 59                          pop rcx
    40                                  sse2:
    41 0000003D F7C200000004                test edx,4000000h   ;test bit 26 (SSE 2)
    42 00000043 741C                        jz sse3            	;SSE 2 available                  
    43 00000045 41BC01000000                mov r12,1
    44 0000004B 4831C0                      xor rax,rax
    45 0000004E 48BF-                       mov rdi,fmt_sse2
    45 00000050 [8800000000000000] 
    46 00000058 51                          push rcx            ;modified by printf
    47 00000059 52                          push rdx			;preserve result of cpuid
    48 0000005A E8(00000000)                call printf
    49 0000005F 5A                          pop rdx
    50 00000060 59                          pop rcx
    51                                  sse3:   
    52 00000061 F7C101000000                test ecx,1         	;test bit 0 (SSE 3)
    53 00000067 7420                        jz ssse3       		;SSE 3 available                  
    54 00000069 41BC01000000                mov r12,1
    55 0000006F 4831C0                      xor rax,rax
    56 00000072 48BF-                       mov rdi,fmt_sse3
    56 00000074 [6F00000000000000] 
    57 0000007C 51                          push rcx            ;modified by printf
    58 0000007D 6A00                        push 0x0
    59 0000007F E8(00000000)                call printf
    60 00000084 4883C408                    add rsp,8
    61 00000088 59                          pop rcx
    62                                  ssse3:   
    63 00000089 F7C109000000                test ecx,9h         ;test bit 0 (SSE 3)
    64 0000008F 7420                        jz sse41          	;SSE 3 available                  
    65 00000091 41BC01000000                mov r12,1
    66 00000097 4831C0                      xor rax,rax
    67 0000009A 48BF-                       mov rdi,fmt_ssse3
    67 0000009C [5500000000000000] 
    68 000000A4 51                          push rcx            ;modified by printf
    69 000000A5 6A00                        push 0x0
    70 000000A7 E8(00000000)                call printf
    71 000000AC 4883C408                    add rsp,8
    72 000000B0 59                          pop rcx
    73                                  sse41:
    74 000000B1 F7C100000800                test ecx,80000h    	;test bit 19 (SSE 4.1)
    75 000000B7 7420                        jz sse42            ;SSE 4.1 available
    76 000000B9 41BC01000000                mov r12,1
    77 000000BF 4831C0                      xor rax,rax
    78 000000C2 48BF-                       mov rdi,fmt_sse41 
    78 000000C4 [3A00000000000000] 
    79 000000CC 51                          push rcx            ;modified by printf
    80 000000CD 6A00                        push 0x0
    81 000000CF E8(00000000)                call printf
    82 000000D4 4883C408                    add rsp,8
    83 000000D8 59                          pop rcx
    84                                  sse42:                   
    85 000000D9 F7C100001000               test ecx,100000h    	;test bit 20 (SSE 4.2)
    86 000000DF 7420                       jz wrapup           	;SSE 4.2 available
    87 000000E1 41BC01000000               mov r12,1
    88 000000E7 4831C0                     xor rax,rax
    89 000000EA 48BF-                      mov rdi,fmt_sse42 
    89 000000EC [1F00000000000000] 
    90 000000F4 51                         push rcx            	;modified by printf
    91 000000F5 6A00                       push 0x0
    92 000000F7 E8(00000000)               call printf
    93 000000FC 4883C408                   add rsp,8
    94 00000100 59                         pop rcx
    95                                  wrapup:
    96 00000101 4983FC01                    cmp r12,1
    97 00000105 7414                        je sse_ok
    98 00000107 48BF-                       mov rdi,fmt_no_sse
    98 00000109 [0000000000000000] 
    99 00000111 4831C0                      xor rax,rax
   100 00000114 E8(00000000)                call printf         ;displays message if SSE not available
   101 00000119 EB03                        jmp the_exit 
   102                                  
   103                                  sse_ok:
   104 0000011B 4C89E0                      mov rax,r12      	;returns 1, sse supported
   105                                  
   106                                  the_exit:      
   107                                  
   108 0000011E C9                      leave
   109 0000011F C3                      ret
